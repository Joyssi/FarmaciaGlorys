/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista.formularios;
import java.awt.event.KeyEvent;
import Controlador.CRUDCliente;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Modelo.POJOCliente;
import Vista.Menu.Menu;
import java.awt.Color;
import java.awt.HeadlessException;

/**
 *
 * @author Joy Cruz
 */
public class VistaCliente extends javax.swing.JInternalFrame {

      int datoSeleccionado = -1;
  
    public VistaCliente() {
        initComponents();
         mostrar();
         Mostrar.setVisible(false);
         InsertarCliente.setVisible(false);
    }

    public void mostrar() {
        try {
            DefaultTableModel modelo;
            CRUDCliente cli = new CRUDCliente();
            modelo = cli.mostrarDatos();
            TablaCliente.setModel(modelo);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        BuscarCliente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaCliente = new javax.swing.JTable();
        EliminarCliente = new javax.swing.JButton();
        EditarCliente = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        AgregarCliente = new javax.swing.JButton();
        InsertarCliente = new javax.swing.JButton();
        Mostrar = new javax.swing.JButton();

        jTextField6.setBackground(new java.awt.Color(255, 255, 255));
        jTextField6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(51, 51, 51));

        jButton3.setText("jButton3");

        setClosable(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestión de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 36), new java.awt.Color(0, 102, 255))); // NOI18N

        BuscarCliente.setBackground(new java.awt.Color(255, 255, 255));
        BuscarCliente.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BuscarCliente.setForeground(new java.awt.Color(51, 51, 51));
        BuscarCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BuscarClienteFocusLost(evt);
            }
        });
        BuscarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuscarClienteMouseClicked(evt);
            }
        });
        BuscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BuscarClienteKeyReleased(evt);
            }
        });

        TablaCliente.setBackground(new java.awt.Color(204, 204, 255));
        TablaCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TablaCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TablaCliente.setForeground(new java.awt.Color(51, 51, 51));
        TablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código de cliente", "Cedula", "Nombres", "Apellidos", "Dirección", "Teléfono", "Correo"
            }
        ));
        TablaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaCliente);

        EliminarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/borrar.png"))); // NOI18N
        EliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarClienteActionPerformed(evt);
            }
        });

        EditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/editar.png"))); // NOI18N
        EditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarClienteActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/buscar1.png"))); // NOI18N

        AgregarCliente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AgregarCliente.setText("+");
        AgregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarClienteActionPerformed(evt);
            }
        });

        InsertarCliente.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InsertarCliente.setForeground(new java.awt.Color(51, 153, 255));
        InsertarCliente.setText("Insertar");
        InsertarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarClienteActionPerformed(evt);
            }
        });

        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InsertarCliente)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AgregarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(EditarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(EliminarCliente))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Mostrar)
                .addGap(188, 188, 188))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(EditarCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AgregarCliente)))
                            .addComponent(EliminarCliente, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(InsertarCliente)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClienteMouseClicked
        datoSeleccionado = TablaCliente.rowAtPoint(evt.getPoint());
    }//GEN-LAST:event_TablaClienteMouseClicked

    private void EliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarClienteActionPerformed
        if (datoSeleccionado >= 0) {
            String Cedula = String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 0));
            CRUDCliente cli = new CRUDCliente();
            if (JOptionPane.showConfirmDialog(rootPane,
                    "Se eliminará el registro, ¿Desea continuar?",
                    "Eliminar Registro",
                    JOptionPane.WARNING_MESSAGE,
                    JOptionPane.YES_NO_OPTION)
                    == JOptionPane.YES_OPTION) {
                cli.eliminar(Cedula);
                mostrar();
                JOptionPane.showMessageDialog(null,
                        "Dato eliminado correctamente");
            }    
        } else {
            JOptionPane.showMessageDialog(null,
                    "Debe seleccionar un registro de la tabla");
        }
    }//GEN-LAST:event_EliminarClienteActionPerformed

    private void EditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarClienteActionPerformed
          Cliente cli = new Cliente();
        int x = (Menu.desktopPane.getWidth() / 2) - cli.getWidth() / 2;
        int y = (Menu.desktopPane.getHeight() / 2) - cli.getHeight() / 2;
        cli.setLocation(x, y);
        Menu.desktopPane.add(cli);

        if (datoSeleccionado >= 0) {
            //mandar datos al formulario
            Cliente.Cedula.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 0)));
            Cliente.NombresC.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 1)));
            Cliente.ApellidosC.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 2)));
            Cliente.Direccion.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 3)));
            Cliente.TelCliente.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 4)));
            Cliente.Correo.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 5)));
            Empleado.Cedula.enable(false);
            //hacer al frente y visible
            cli.toFront();
            Proveedor.GuardarProveedor.setVisible(false);
            Proveedor.ActualizarProveedor.setVisible(true);
            Proveedor.Cancelar.setVisible(true);
            cli.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro a actualizar");
        }
    }//GEN-LAST:event_EditarClienteActionPerformed

    private void BuscarClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscarClienteKeyReleased
        try {

            DefaultTableModel modelo;
            CRUDCliente cli = new CRUDCliente();
            modelo = cli.buscarDatos(BuscarCliente.getText());
            TablaCliente.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_BuscarClienteKeyReleased

    private void AgregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarClienteActionPerformed
        Cliente cli = new Cliente();
        int x = (Menu.desktopPane.getWidth() / 2) - cli.getWidth() / 2;
        int y = (Menu.desktopPane.getHeight() / 2) - cli.getHeight() / 2;
        cli.setLocation(x, y);
        Menu.desktopPane.add(cli);
        cli.toFront();
        cli.setVisible(true);
    }//GEN-LAST:event_AgregarClienteActionPerformed

    private void BuscarClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BuscarClienteFocusLost
        BuscarCliente.setText("Buscar por cédula, nombres o apellidos");
       BuscarCliente.setForeground(Color.gray);
    }//GEN-LAST:event_BuscarClienteFocusLost

    private void BuscarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscarClienteMouseClicked
        BuscarCliente.setText("");
    }//GEN-LAST:event_BuscarClienteMouseClicked

    private void InsertarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarClienteActionPerformed
        if (datoSeleccionado >=0){
          VistaVenta.CodC.setText(String.valueOf(TablaCliente.getValueAt(datoSeleccionado, 0)));
          dispose(); 
          JOptionPane.showMessageDialog(null, "Dato agregado correctamente");
      }else{
         JOptionPane.showMessageDialog(null, "Debe seleccionar un registro"); 
      }
    }//GEN-LAST:event_InsertarClienteActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        mostrar();
    }//GEN-LAST:event_MostrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarCliente;
    private javax.swing.JTextField BuscarCliente;
    public static javax.swing.JButton EditarCliente;
    public static javax.swing.JButton EliminarCliente;
    public static javax.swing.JButton InsertarCliente;
    private javax.swing.JButton Mostrar;
    public static javax.swing.JTable TablaCliente;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
